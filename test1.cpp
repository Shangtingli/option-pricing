#include <iostream>
#include "options.h"

int main()
{
	cout << "------------Specific Example 1-----------------------" << endl;
	double r = log(1.25);
	double StockP = 4;
	double q = 0;
	double M = 2;
	double StrikeP = 5;
	double V = log(2);
	int TS = 2;
	char S = 'E';
	char T = 'P';
	Option Example1(r,V,M,StockP,StrikeP,S,T,q,TS);
	vector<double> Prices = Example1.getAllStockP(TS,Example1.getU(),Example1.getD());
	cout << "Checking for the functionality of getAllStockP()..." << endl;
	cout << "Result is the vector generated by this function" << endl;
	cout << endl;
	for (auto it = Prices.begin();it != Prices.end();it++)
	{
		cout << (*it) << " ";
	}
	cout << endl;
	cout << "Example option price is(Genral Method) : " << Example1.getGeneralOptionP() << endl;
	cout << "Example option price is(American Method) : " << Example1.getAmerOptionP() << endl;
	cout << endl;
	cout << "Checking for the functionality of getAllOPtionsV()..." << endl;
	queue<double> comp = Example1.getAllOptionV(TS);
	cout << "u is : " << Example1.getU() << endl;
	cout << "d is : " << Example1.getD() << endl;
	cout << "Upper value : " << Example1.getOneValue(Example1.getU()*Example1.getStockPrice()) << endl;
	cout << "Lower value : " << Example1.getOneValue(Example1.getD()*Example1.getStockPrice()) << endl;
	cout << "comp queue is :" << endl;
	while(!comp.empty())
	{
		cout << comp.front() << " ";
		comp.pop();
	}
	cout << endl;

	/*cout << "------------Specific Example 2-----------------------" << endl;
	double r = .05;
	double StockP = 1.5;
	double q = 0;
	double M = 2;
	double StrikeP = 5;
	double V = log(2);
	int TS = 2;
	char S = 'A';
	char T = 'P';
	Option Example(r,V,M,StockP,StrikeP,S,T,q,TS);
	cout << "Example option price is : " << Example.getAmerOptionP() << endl;*/
}
